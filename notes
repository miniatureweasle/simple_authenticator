check all # check and #TODO
make sure strings are ''
ensure all docstrings are written
change username to email!
ensure HTTPS!
catch and log DB errors
close db connections
password_salt = str(uuid.uuid4()).replace("-", "")
password_hash = scrypt.hash(password, password_salt)
openssl req -new -x509 -keyout server.pem -out server.pem -days 365 -nodes
https://www.vertabelo.com/blog/technical-articles/how-to-store-authentication-data-in-a-database-part-2-email-confirmation-and-recovering-passwords
https://gist.github.com/dergachev/7028596
add -subj '/CN=localhost' to certificates to suppress Alt name warning

You check if the parameters of the hashed password are the same as what you're currently using, and if not you rehash the password which you just used during the login process. Users can be gradually, transparently upgraded this way.

openssl req \
    -newkey rsa:2048 \
    -x509 \
    -nodes \
    -keyout self-signed.key \
    -new \
    -out self-signed.crt \
    -subj /CN=dev.mycompany.com \
    -reqexts SAN \
    -extensions SAN \
    -config <(cat /etc/ssl/openssl.cnf \
        <(printf '[SAN]\nsubjectAltName=DNS:localhost')) \
    -sha256 \
    -days 3650